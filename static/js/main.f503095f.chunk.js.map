{"version":3,"sources":["Home/index.js","Form/index.js","base.js","Profile/index.js","Footer/index.js","Auth.js","PrivateRoute.js","Login/index.js","Register/index.js","App.js","serviceWorker.js","index.js","Assets/daylight-environment-forest-idyllic-459225.jpg"],"names":["Home","Body","alt","src","HeroImage","Component","Form","placeholder","type","kind","color","app","firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Profile","Header","Title","Content","Item","renderAs","position","size","Footer","className","onClick","auth","signOut","style","textAlign","AuthContext","React","createContext","AuthProvider","children","useState","currentUser","setCurrentUser","useEffect","onAuthStateChanged","Provider","value","PrivateRoute","RouteComponent","component","rest","useContext","render","routeProps","to","withRouter","history","handleLogin","useCallback","event","a","async","preventDefault","target","elements","email","password","signInWithEmailAndPassword","push","alert","user","onSubmit","name","handleRegister","createUserWithEmailAndPassword","App","Brand","Burger","Menu","Container","path","exact","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.f503095f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Hero from 'react-bulma-components/lib/components/hero';\nimport Heading from 'react-bulma-components/lib/components/heading';\nimport Section from 'react-bulma-components/lib/components/section';\nimport Container from 'react-bulma-components/lib/components/container';\nimport HeroImage from '../Assets/daylight-environment-forest-idyllic-459225.jpg';\n\nclass Home extends Component {\n    render() {\n        return (\n            <>\n                <Section>\n                    <Hero>\n                        <Hero.Body>\n                            <Container>\n                                <img alt='nature' src={HeroImage} />\n                            </Container>\n                        </Hero.Body>\n                    </Hero>\n                </Section>\n                <Section>\n                    <Hero>\n                        <Hero.Body>\n                            <Container>\n                                <Heading>\n                                    Informational section below hero image\n                                </Heading>\n                                <article>\n                                    <p>Chocolate I love sesame snaps dragée soufflé I love halvah. Jujubes tiramisu chocolate bar gummies icing I love jujubes. Gummi bears gingerbread donut marzipan cotton candy I love. Fruitcake lollipop pastry pudding sugar plum I love apple pie cookie danish. Candy cake chocolate cake chocolate cake powder cotton candy caramels gummi bears. Cake bonbon pie pastry. Dragée tart candy chocolate muffin. Toffee oat cake muffin powder biscuit chocolate cake pastry. Donut muffin chupa chups lollipop dessert icing gummi bears cake. Lemon drops marzipan sesame snaps fruitcake I love.\n\nJelly beans bear claw biscuit dragée cookie. Marshmallow candy canes jelly. Macaroon fruitcake pastry caramels tiramisu. Bear claw chupa chups marshmallow biscuit danish powder topping tiramisu chocolate. Marshmallow jelly cookie I love. Tootsie roll cupcake chocolate cookie cookie icing jelly-o. Jujubes macaroon wafer. Cupcake icing powder liquorice bear claw jujubes biscuit wafer.\n\nMacaroon cupcake apple pie tootsie roll tiramisu I love I love. Jujubes jelly I love sweet. Jelly jelly jelly-o sweet chocolate cake dessert carrot cake. Carrot cake chocolate bar lemon drops. Apple pie danish tiramisu sweet roll I love. Donut macaroon gummies donut wafer I love gummies sesame snaps. Bonbon liquorice jelly fruitcake I love apple pie bear claw brownie. Pastry I love croissant jelly-o jelly. Macaroon I love biscuit I love danish jelly biscuit cake dessert.\n\nCake chupa chups sweet roll carrot cake pudding topping lemon drops carrot cake gummi bears. Chocolate cake tootsie roll lemon drops cake I love. Donut gingerbread bear claw apple pie muffin donut cookie I love tootsie roll. Lemon drops jelly beans chocolate chocolate lollipop chocolate bar cupcake dessert caramels. Chocolate bar biscuit marshmallow. Cookie muffin jelly.\n\nFruitcake pastry toffee I love gummi bears chocolate bar jelly-o. Liquorice jelly jelly-o croissant oat cake. Gummies cake I love macaroon icing jelly wafer. Lollipop chocolate bar I love. Sweet roll I love chocolate. Jelly-o jujubes ice cream liquorice danish caramels carrot cake. Cheesecake bonbon cookie ice cream cotton candy jelly jelly-o muffin. Bonbon lollipop jelly beans toffee cotton candy I love apple pie. Pastry tootsie roll chupa chups chocolate macaroon.\n\n                                    </p>\n                                </article>\n                            </Container>\n                        </Hero.Body>\n                    </Hero>\n                </Section>\n            </>\n        )\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Field, Control, Label, Input } from 'react-bulma-components/lib/components/form';\nimport Button from 'react-bulma-components/lib/components/button';\n\nclass Form extends Component {\n    render() {\n        return (\n            <>\n                <Field>\n                    <Label>Username</Label>\n                    <Control>\n                        <Input placeholder='Text input' />\n                    </Control>\n                </Field>\n                <Field>\n                    <Label>Phone number</Label>\n                    <Control>\n                        <Input type='number' placeholder='Phone number' />\n                    </Control>\n                </Field>\n                <Field>\n                    <Label>Address</Label>\n                    <Control>\n                        <Input type='text' placeholder='Address' />\n                    </Control>\n                </Field>\n                <Field>\n                    <Label>Email</Label>\n                    <Control>\n                        <Input type='email' placeholder='Email input' />\n                    </Control>\n                </Field>\n                <Field>\n                    <Label>Date of birth</Label>\n                    <Control>\n                        <Input type='number' />\n                    </Control>\n                </Field>\n                <Field kind='group'>\n                    <Label>Security Question 1</Label>\n                    <Input type='text' placeholder='Question 1' />\n                    <Input type='text' placeholder='Answear 1' />\n                </Field>\n                <Field kind='group'>\n                    <Label>Security Question 2</Label>\n                    <Input type='text' placeholder='Question 2' />\n                    <Input type='text' placeholder='Answear 2' />\n                </Field>\n                <Field kind='group'>\n                    <Label>Security Question 3</Label>\n                    <Input type='text' placeholder='Question 3' />\n                    <Input type='text' placeholder='Answear 3' />\n                </Field>\n                <Field kind='group'>\n                    <Control>\n                        <Button type='primary'>Submit</Button>\n                    </Control>\n                    <Control>\n                        <Button color='link'>Cancel</Button>\n                    </Control>\n                </Field>\n            </>\n        )\n    }\n}\n\nexport default Form;\n","import * as firebase from 'firebase/app';\nimport 'firebase/auth';\n\nconst app = firebase.initializeApp({\n    apiKey: process.env.REACT_APP_FIREBASE_KEY,\n    authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\n    databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID\n});\n\nexport default app;\n","import React, { Component } from 'react';\nimport { Hero, Section, Image, Card, Media, Container, Content, Button } from 'react-bulma-components';\nimport Form from 'Form';\nimport app from '../base';\n\nclass Profile extends Component {\n    render() {\n        return (\n            <>\n                <Section>\n                    <Hero>\n                        <Hero.Body>\n                            <Container>\n                                <Card>\n                                    <Card.Header>\n                                        <Card.Header.Title>Your profile details</Card.Header.Title>\n                                    </Card.Header>\n                                    <Card.Content>\n                                        <Media>\n                                            <Media.Item renderAs='figure' position='left'>\n                                                <Image size={128} alt='128x128' src='http://bulma.io/images/placeholders/128x128.png' />\n                                            </Media.Item>\n                                        </Media>\n                                        <Content>\n                                            <Form />\n                                        </Content>\n                                    </Card.Content>\n                                    <Card.Footer>\n                                        <Card.Footer.Item></Card.Footer.Item>\n                                        <Button className='is-primary is-outlined' onClick={() => app.auth().signOut()}>Sign out</Button>\n                                    </Card.Footer>\n                                </Card>\n                            </Container>\n                        </Hero.Body>\n                    </Hero>\n                </Section>\n            </>\n        )\n    }\n}\n\nexport default Profile;\n","import React, { Component } from 'react';\nimport Content from 'react-bulma-components/lib/components/content';\nimport Container from 'react-bulma-components/lib/components/container';\nimport FooterBulma from 'react-bulma-components/lib/components/footer';\n\nclass Footer extends Component {\n    render() {\n        return (\n            <FooterBulma>\n                <Container>\n                    <Content style={{ textAlign: 'center' }}>\n                        <p> <strong>Miedzyslowami 2020</strong></p>\n                    </Content>\n                </Container>\n            </FooterBulma>\n        )\n    }\n}\n\nexport default Footer;\n","import React, { useEffect, useState } from 'react';\nimport app from './base';\n\nexport const AuthContext = React.createContext();\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    app.auth().onAuthStateChanged(setCurrentUser);\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{\n        currentUser\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import React, { useContext } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { AuthContext } from './Auth';\n\nconst PrivateRoute = ({ component: RouteComponent, ...rest }) => {\n    const { currentUser } = useContext(AuthContext);\n    return (\n        <Route\n            {...rest}\n            render={routeProps =>\n                !!currentUser ? (\n                    <RouteComponent {...routeProps} />\n                ) : (\n                        <Redirect to={'/login'} />\n                    )\n            }\n        />\n    );\n};\n\nexport default PrivateRoute\n","import React, { useCallback, useContext } from 'react';\nimport { withRouter, Redirect } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport app from '../base';\nimport { AuthContext } from '../Auth';\nimport { Hero, Section, Heading, Card, Container, Button } from 'react-bulma-components';\nimport { Field, Control, Label } from 'react-bulma-components/lib/components/form';\n\nconst Login = ({ history }) => {\n  const handleLogin = useCallback(\n    async event => {\n      event.preventDefault();\n      const { email, password } = event.target.elements;\n      try {\n        await app\n          .auth()\n          .signInWithEmailAndPassword(email.value, password.value);\n        history.push('/');\n      } catch (error) {\n        alert(error);\n      }\n    },\n    [history]\n  );\n\n  const { currentUser } = useContext(AuthContext);\n\n  if (currentUser) {\n    return <Redirect to='/' user={currentUser} />;\n  }\n\n  return (\n    <Section>\n      <Hero>\n        <Heading>\n          Log in\n                </Heading>\n        <Hero.Body>\n          <Container>\n            <Card>\n              <form onSubmit={handleLogin}>\n                <Field>\n                  <Label>Email</Label>\n                  <Control>\n                    <input className='input' name='email' type='email' placeholder='email' />\n                  </Control>\n                </Field>\n                <Field>\n                  <Label>Password</Label>\n                  <Control>\n                    <input className='input' name='password' type='password' placeholder='password' />\n                  </Control>\n                </Field>\n                <Field className='is-grouped'>\n                  <Control>\n                    <Button className='is-primary' type='submit'>Log in</Button>\n                  </Control>\n                  <Control>\n                    <Link className='button is-primary is-outlined' to='/register'>or register</Link>\n                  </Control>\n                </Field>\n              </form>\n            </Card>\n          </Container>\n        </Hero.Body>\n      </Hero>\n    </Section>\n  );\n};\n\nexport default withRouter(Login);\n","import React, { useCallback } from 'react';\nimport { Field, Control, Label } from 'react-bulma-components/lib/components/form';\nimport { withRouter } from 'react-router';\nimport app from '../base';\nimport { Hero, Heading, Button, Section, Container, Card } from 'react-bulma-components';\n\nconst Register = ({ history }) => {\n  const handleRegister = useCallback(async event => {\n    event.preventDefault();\n    const { email, password } = event.target.elements;\n    try {\n      await app\n        .auth()\n        .createUserWithEmailAndPassword(email.value, password.value);\n      history.push('/');\n    } catch (error) {\n      alert(error);\n    }\n  }, [history]);\n\n  return (\n      <form onSubmit={handleRegister}>\n        <Section>\n          <Hero>\n          <Heading>\n          Register new user\n                </Heading>\n            <Hero.Body>\n              <Container>\n                <Card>\n                  <Field>\n                    <Label>Email</Label>\n                    <Control>\n                      <input className='input' name='email' type='email' placeholder='Text input' />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>Password</Label>\n                    <Control>\n                      <input className='input' name='password' type='password' placeholder='password' />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>Address</Label>\n                    <Control>\n                      <input className='input' type='text' placeholder='Address' />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>Phone number</Label>\n                    <Control>\n                      <input className='input' type='number' placeholder='Phone number' />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>Date of birth</Label>\n                    <Control>\n                      <input className='input' name='birthday' type='number' placeholder='birthday' />\n                    </Control>\n                  </Field>\n                  <Field>\n                    <Label>Security Question 1</Label>\n                    <Control>\n                      <input className='input' type='text' placeholder='Question 1' />\n                      <input className='input' type='text' placeholder='Answear 1' />\n                    </Control></Field>\n                  <Field>\n                    <Label>Security Question 2</Label>\n                    <Control>\n                      <input className='input' type='text' placeholder='Question 2' />\n                      <input className='input' type='text' placeholder='Answear 2' />\n                    </Control></Field>\n                  <Field>\n                    <Label>Security Question 3</Label>\n                    <Control>\n                      <input className='input' type='text' placeholder='Question 3' />\n                      <input className='input' type='text' placeholder='Answear 3' />\n                    </Control></Field>\n                  <Button type='submit' className='is-primary'>Register</Button>\n                </Card>\n              </Container>\n            </Hero.Body>\n          </Hero></Section>\n      </form>\n  );\n};\n\nexport default withRouter(Register);\n","import React from 'react';\nimport './App.scss';\nimport Home from 'Home';\nimport Profile from 'Profile';\nimport Footer from 'Footer';\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom';\nimport Navbar from 'react-bulma-components/lib/components/navbar';\nimport { AuthProvider } from 'Auth';\nimport PrivateRoute from 'PrivateRoute';\nimport Login from 'Login';\nimport Register from 'Register';\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Navbar className='is-primary is-size-4'>\n          <Navbar.Brand>\n            <p className='navbar-item'>Jetcake-project</p>\n            <Navbar.Burger />\n          </Navbar.Brand>\n          <Navbar.Menu>\n            <Navbar.Container>\n              <Link className='navbar-item' to='/'> Home</Link>\n              <Link className='navbar-item' to='/profile'>Profile</Link>\n              <Link className='navbar-item' to='/login'>Login</Link>\n            </Navbar.Container>\n          </Navbar.Menu>\n        </Navbar>\n        <Switch>\n        <PrivateRoute path='/profile' component={Profile} />\n          <Route exact path='/'>\n            <Home />\n          </Route>\n          <Route exact path='/login'>\n            <Login />\n          </Route>\n          <Route exact path='/register'>\n            <Register />\n          </Route>\n        </Switch>\n        <Footer />\n      </Router>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/daylight-environment-forest-idyllic-459225.15a2aed1.jpg\";"],"sourceRoot":""}